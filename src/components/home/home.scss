/* ---------- Table of Contents ---------- 

    1. Homepage.js styles
    2. Cradle.js styles
    3. Ticker.js styles

   ---------- Table of Contents ---------- */


/* ---------- Homepage styles ---------- */
$accent-color: rgb(0, 200, 200);
$main-color: rgb(220, 220, 220);
$sub-color: rgb(169, 169, 169);

.homepage {
    min-height: 100vh;
    min-width: 100vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-size: cover;
    background: radial-gradient(ellipse at top, #080e21 0%,  #1b2735 95%);
}

.main-content {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.introduction {
    color: white;
    margin-right: 3rem;
    height: 55vh;
    text-align: left;
}

.introduction p {
    font-size: 1.2rem;
    letter-spacing: 2px;
    color: $accent-color;
    margin-bottom: 1rem;
}

.introduction h2 {
    font-size: 4rem;
    color: $main-color;
    margin-bottom: 0.5rem;
}

.introduction h3 {
    font-size: 3rem;
    color: $sub-color;
    margin-bottom: 1rem;
}

.description {
    font-size: 1rem !important;
    color: $sub-color !important;
    line-height: 1.1rem;
}

.main-content {
    width: 80vw;
}

.left-content {
    width: 57%;
    margin-right: 3%;
}

.right-content {
    width: 40%;
}

.ticker-holder {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    margin-top: 2rem;
    font-size: 1.5rem;
    color: $main-color;
}

footer {
    position: absolute;
    bottom: 0.5rem;
    color: $main-color;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

footer h3:first-child {
    margin-bottom: 2rem;
}

footer h3:last-child {
    margin-bottom: 1rem;
    display: flex;
}

footer h3 div {
    border-top: 3px solid $accent-color;
    width: 1.5rem;
    padding: 0.1rem;
}

footer h3 div:first-child {
    transform-origin: right;
    transform: rotate(30deg);
}

footer h3 div:last-child {
    transform-origin: left;
    transform: rotate(-30deg);
}

// This block is for creating the meteor shower background for homepage
$meteors: 15; // Number of meteors in total
$stars: 300; // Number of stars in total
$shadows: (); // Variable for holding all the stars that will be created; stars are created by adding multiple box-shadows to one element

@for $i from 1 through $stars { // Loops for creating random positions for each of the stars; specific for 1920:1080 aspect ratio for now 
    $x: random(1920);
    $y: random(1080);
    $shadows: $shadows, ( $x+px $y+px white) !global;
}

.star {
    width: 1px;
    height: 1px;
    background: transparent;
    box-shadow: $shadows;
    position: absolute;
    top: 0;
    left: 0;
}

@for $i from 1 through $meteors { 
    $v: random(90) + 9; // left value; in percentage units
    $h: random(250) + 50; // top value; in pixel units
    $d: random(70)/10 + 3; // animation duration value so each meteor flies at different speeds; min of 3s, max of 10s
    .meteor-#{$i} {
      position: absolute;
      top: $h + px;
      left: $v*1%;
      width: 300px; // These dimensions represent the tail of the meteor
      height: 1px;
      transform: rotate(-45deg); // So the meteors don't fly sideways
      background-image: linear-gradient(to right, #fff, rgba(255,255,255,0));
      animation: meteor $d+s linear  infinite;
      &:before {
        content: "";
        position: absolute;
        width: 4px; 
        height: 5px;
        border-radius: 50%;
        margin-top: -2px;
        background: rgba(#fff,.7);
        box-shadow: 0 0 15px 3px #fff;
      }
      
    }
  }
  
  @keyframes meteor { // Each meteor flies for 12% of the animation and then reset back to their starting position
    0% {
      opacity: 1;
      margin-top: -300px;
      margin-right: -300px;
    }
    12% {
      opacity: 0;
    }
    15% {
      margin-top: 300px;
      margin-left: -600px;
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }


/* ---------- Cradle styles ---------- */
.cradle {
    min-width: 300px;
    height: 30vh;
    border-top: 4px solid $accent-color;
    display: flex;
    justify-content: center;
}

.ball {
    position: relative;
    width: 4px;
    background-color: rgb(200, 200, 200);
    margin: 0 28px;
    transform-origin: top;
    border-bottom-left-radius: 50%;
    border-bottom-right-radius: 50%;
}

.ball::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: -26px;
    height: 60px;
    width: 60px;
    border-radius: 50%;
    background: radial-gradient(circle at 20% 20%, white, black);
}

/* Note: All these keyframes are to mimic how a pendulum works in real life; slowing down as it gets to the top and speeding up as it goes 
back down (eq: angle(time) = maxAngle*cos(angularMomentum * time) ) */
/* Another Note: the "Counter" keyframes are to spin the ball in the opposite direction so that the lighting stays consistent */
@keyframes leftBall {
    0%  { transform: rotate(0deg); }
    5%  { transform: rotate(14deg); }
    10%  { transform: rotate(26.45deg); }
    15%  { transform: rotate(36.4deg); }
    20%  { transform: rotate(42.8deg); }
    25%  { transform: rotate(45deg); }
    30%  { transform: rotate(42.8deg); }
    35%  { transform: rotate(36.4deg); }
    40%  { transform: rotate(26.45deg); }
    45%  { transform: rotate(14deg); }
    50%  { transform: rotate(0deg); }
    100%  { transform: rotate(0deg); }
}
.left-ball {
    animation-name: leftBall;
    animation-duration: 5s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}
@keyframes leftCounter {
    0%  { transform: rotate(0deg); }
    5%  { transform: rotate(-14deg); }
    10%  { transform: rotate(-26.45deg); }
    15%  { transform: rotate(-36.4deg); }
    20%  { transform: rotate(-42.8deg); }
    25%  { transform: rotate(-45deg); }
    30%  { transform: rotate(-42.8deg); }
    35%  { transform: rotate(-36.4deg); }
    40%  { transform: rotate(-26.45deg); }
    45%  { transform: rotate(-14deg); }
    50%  { transform: rotate(0deg); }
    100%  { transform: rotate(0deg); }
}
.left-ball::after {
    animation-name: leftCounter;
    animation-duration: 5s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}

@keyframes rightBall {
    0%  { transform: rotate(0deg); }
    50%  { transform: rotate(0deg); }
    55%  { transform: rotate(-14deg); }
    60%  { transform: rotate(-26.45deg); }
    65%  { transform: rotate(-36.4deg); }
    70%  { transform: rotate(-42.8deg); }
    75%  { transform: rotate(-45deg); }
    80%  { transform: rotate(-42.8deg); }
    85%  { transform: rotate(-36.4deg); }
    90%  { transform: rotate(-26.45deg); }
    95%  { transform: rotate(-14deg); }
    100%  { transform: rotate(0deg); }
}
.right-ball {
    animation-name: rightBall;
    animation-duration: 5s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}
@keyframes rightCounter {
    0%  { transform: rotate(0deg); }
    50%  { transform: rotate(0deg); }
    55%  { transform: rotate(14deg); }
    60%  { transform: rotate(26.45deg); }
    65%  { transform: rotate(36.4deg); }
    70%  { transform: rotate(42.8deg); }
    75%  { transform: rotate(45deg); }
    80%  { transform: rotate(42.8deg); }
    85%  { transform: rotate(36.4deg); }
    90%  { transform: rotate(26.45deg); }
    95%  { transform: rotate(14deg); }
    100%  { transform: rotate(0deg); }
}
.right-ball::after {
    animation-name: rightCounter;
    animation-duration: 5s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}


/* ---------- Ticker styles ---------- */
$interests: 6;

.ticker {
    position: relative;
    background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0));
    height: 3rem;
    width: 15rem;
    display: flex;
    justify-content: center;
}

@keyframes tick {
    0% {
        opacity: 0;
        top:  -2rem;
    }
    2% {
        opacity: 1;
        top: 0.75rem;
    }
    17% {
        opacity: 1;
        top: 0.75rem;
    }
    19% {
        opacity: 0;
        top: 4rem;
    }
    100% {
        opacity: 0;
        top: -2rem;
    }
}
.interest {
    opacity: 0;
    position: absolute;
    font-size: 1.5rem;
    color: $accent-color;
    animation-name: tick;
    animation-timing-function: linear;
    animation-duration: 18s;
    animation-iteration-count: infinite;
}

@for $i from 1 through $interests {
    $delay: (($i - 1) * 3)+s;
    .interest-#{$i} {
        animation-delay: $delay;
    }
}